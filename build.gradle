import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

}

plugins {
    id 'java'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.6.0"
    id 'com.avast.gradle.docker-compose' version '0.16.11'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    google()
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.2'
    testImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.14.2'
    implementation('org.apache.commons:commons-collections4:4.4')
    implementation('commons-collections:commons-collections:3.2.2')
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation group: 'org.json', name: 'json', version: '20230227'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.11.2'
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.11.2'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '7.3.2-ce'
    implementation group: 'org.apache.avro', name: 'avro', version: '1.11.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-avro', version: '2.14.2'
    implementation group: 'io.confluent', name: 'kafka-schema-registry-client', version: '7.3.2'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '7.3.2'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'
    implementation group: 'tech.grasshopper', name: 'extentreports-cucumber7-adapter', version: '1.10.1'
    testImplementation group: 'io.cucumber', name: 'cucumber-picocontainer', version: '7.11.1'

}


def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("src/main/java/avro")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}


test {
    useJUnitPlatform()
}

task kafkaTests(type: Test) {
    useJUnit()
    systemProperty("cucumber.filter.tags", "@Test")
}

dockerCompose {
    dockerComposeFile 'docker-compose.yml'
}